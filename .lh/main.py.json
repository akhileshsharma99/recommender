{
    "sourceFile": "main.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 63,
            "patches": [
                {
                    "date": 1678412092969,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1678412114533,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,23 +1,11 @@\n import sys\r\n from gpt import Gpt\r\n \r\n \r\n-def main(user_input):\r\n+def main():\r\n     api_key = os.environ['OPENAI_API_KEY']\r\n-    \r\n-    prompt = 'Food:' + user_input + \\\r\n-        '. Return the serving calories and nutrition as one JSON in the form of {\"items\": [{\"item_name\": string,\"calories\": number,\"protein\": number,\"carbohydrates\": number, \"fat\": number, \"servings\": number, \"unit\": string}, ...]}'\r\n \r\n-    ai = Gpt(api_key=api_key)\r\n \r\n-    nutrition = ai.generate_response(prompt=prompt)\r\n \r\n-    return nutrition.strip()\r\n-\r\n-\r\n if __name__ == \"__main__\":\r\n-    user_input = sys.argv[1]\r\n-    # user_input = \"3 crepes, 6 tbsp of hershey's syrup:\"\r\n-    response = main(user_input)\r\n-    print(response)\r\n-    # sys.stdout.write(response)\r\n+    main()\r\n"
                },
                {
                    "date": 1678412133339,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,11 @@\n-import sys\r\n+import os\r\n from gpt import Gpt\r\n \r\n \r\n def main():\r\n     api_key = os.environ['OPENAI_API_KEY']\r\n+    print(api_key)\r\n \r\n \r\n-\r\n if __name__ == \"__main__\":\r\n     main()\r\n"
                },
                {
                    "date": 1678414085180,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,8 +3,9 @@\n \r\n \r\n def main():\r\n     api_key = os.environ['OPENAI_API_KEY']\r\n+    datasets_directory = 'data/kaggle_food_nutrition'\r\n     print(api_key)\r\n \r\n \r\n if __name__ == \"__main__\":\r\n"
                },
                {
                    "date": 1678414122937,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,12 @@\n import os\r\n-from gpt import Gpt\r\n+from llm import LLM\r\n \r\n \r\n def main():\r\n     api_key = os.environ['OPENAI_API_KEY']\r\n-    datasets_directory = 'data/kaggle_food_nutrition'\r\n+    datasets_directory = '/data/kaggle_food_nutrition'\r\n+    gpt = LLM(api_key=api_key)\r\n     print(api_key)\r\n \r\n \r\n if __name__ == \"__main__\":\r\n"
                },
                {
                    "date": 1678414142281,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,9 @@\n def main():\r\n     api_key = os.environ['OPENAI_API_KEY']\r\n     datasets_directory = '/data/kaggle_food_nutrition'\r\n     gpt = LLM(api_key=api_key)\r\n+    \r\n     print(api_key)\r\n \r\n \r\n if __name__ == \"__main__\":\r\n"
                },
                {
                    "date": 1678414157296,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n def main():\r\n     api_key = os.environ['OPENAI_API_KEY']\r\n     datasets_directory = '/data/kaggle_food_nutrition'\r\n     gpt = LLM(api_key=api_key)\r\n-    \r\n+    gpt.createEmbedding(datasets_directory=datasets_directory)\r\n     print(api_key)\r\n \r\n \r\n if __name__ == \"__main__\":\r\n"
                },
                {
                    "date": 1678414214339,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n \r\n \r\n def main():\r\n     api_key = os.environ['OPENAI_API_KEY']\r\n-    datasets_directory = '/data/kaggle_food_nutrition'\r\n+    datasets_directory = 'data/kaggle_food_nutrition'\r\n     gpt = LLM(api_key=api_key)\r\n     gpt.createEmbedding(datasets_directory=datasets_directory)\r\n     print(api_key)\r\n \r\n"
                },
                {
                    "date": 1678414906638,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n def main():\r\n     api_key = os.environ['OPENAI_API_KEY']\r\n     datasets_directory = 'data/kaggle_food_nutrition'\r\n     gpt = LLM(api_key=api_key)\r\n-    gpt.createEmbedding(datasets_directory=datasets_directory)\r\n+    texts = gpt.createEmbedding(datasets_directory=datasets_directory)\r\n     print(api_key)\r\n \r\n \r\n if __name__ == \"__main__\":\r\n"
                },
                {
                    "date": 1678414915501,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,8 +6,9 @@\n     api_key = os.environ['OPENAI_API_KEY']\r\n     datasets_directory = 'data/kaggle_food_nutrition'\r\n     gpt = LLM(api_key=api_key)\r\n     texts = gpt.createEmbedding(datasets_directory=datasets_directory)\r\n+    print(len(texts))\r\n     print(api_key)\r\n \r\n \r\n if __name__ == \"__main__\":\r\n"
                },
                {
                    "date": 1678414947943,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n def main():\r\n     api_key = os.environ['OPENAI_API_KEY']\r\n     datasets_directory = 'data/kaggle_food_nutrition'\r\n     gpt = LLM(api_key=api_key)\r\n-    texts = gpt.createEmbedding(datasets_directory=datasets_directory)\r\n+    texts = gpt.createTexts(datasets_directory=datasets_directory)\r\n     print(len(texts))\r\n     print(api_key)\r\n \r\n \r\n"
                },
                {
                    "date": 1678415098133,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,8 @@\n     datasets_directory = 'data/kaggle_food_nutrition'\r\n     gpt = LLM(api_key=api_key)\r\n     texts = gpt.createTexts(datasets_directory=datasets_directory)\r\n     print(len(texts))\r\n-    print(api_key)\r\n \r\n \r\n if __name__ == \"__main__\":\r\n     main()\r\n"
                },
                {
                    "date": 1678415127170,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n     api_key = os.environ['OPENAI_API_KEY']\r\n     datasets_directory = 'data/kaggle_food_nutrition'\r\n     gpt = LLM(api_key=api_key)\r\n     texts = gpt.createTexts(datasets_directory=datasets_directory)\r\n-    print(len(texts))\r\n+    print(texts)\r\n \r\n \r\n if __name__ == \"__main__\":\r\n     main()\r\n"
                },
                {
                    "date": 1678415229170,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n     api_key = os.environ['OPENAI_API_KEY']\r\n     datasets_directory = 'data/kaggle_food_nutrition'\r\n     gpt = LLM(api_key=api_key)\r\n     texts = gpt.createTexts(datasets_directory=datasets_directory)\r\n-    print(texts)\r\n+    print(len(texts))\r\n \r\n \r\n if __name__ == \"__main__\":\r\n     main()\r\n"
                },
                {
                    "date": 1678415735496,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n def main():\r\n     api_key = os.environ['OPENAI_API_KEY']\r\n     datasets_directory = 'data/kaggle_food_nutrition'\r\n     gpt = LLM(api_key=api_key)\r\n-    texts = gpt.createTexts(datasets_directory=datasets_directory)\r\n+    docs = gpt.createDocs(datasets_directory=datasets_directory)\r\n     print(len(texts))\r\n \r\n \r\n if __name__ == \"__main__\":\r\n"
                },
                {
                    "date": 1678415836056,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,11 +4,16 @@\n \r\n def main():\r\n     api_key = os.environ['OPENAI_API_KEY']\r\n     datasets_directory = 'data/kaggle_food_nutrition'\r\n+    query = \"How many calories in an egg?\"\r\n+\r\n     gpt = LLM(api_key=api_key)\r\n     docs = gpt.createDocs(datasets_directory=datasets_directory)\r\n-    print(len(texts))\r\n+    embedding = gpt.createEmbedding()\r\n+    db = gpt.getDatabase()\r\n+    result = gpt.query_database(query, db)\r\n \r\n+    print(db)\r\n \r\n if __name__ == \"__main__\":\r\n     main()\r\n"
                },
                {
                    "date": 1678415864695,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n \r\n     gpt = LLM(api_key=api_key)\r\n     docs = gpt.createDocs(datasets_directory=datasets_directory)\r\n     embedding = gpt.createEmbedding()\r\n-    db = gpt.getDatabase()\r\n+    db = gpt.getDatabase(docs=docs, embeddings=embedding)\r\n     result = gpt.query_database(query, db)\r\n \r\n     print(db)\r\n \r\n"
                },
                {
                    "date": 1678415882289,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,16 +4,16 @@\n \r\n def main():\r\n     api_key = os.environ['OPENAI_API_KEY']\r\n     datasets_directory = 'data/kaggle_food_nutrition'\r\n-    query = \"How many calories in an egg?\"\r\n+    query = \"How many calories in Eggplant?\"\r\n \r\n     gpt = LLM(api_key=api_key)\r\n     docs = gpt.createDocs(datasets_directory=datasets_directory)\r\n     embedding = gpt.createEmbedding()\r\n     db = gpt.getDatabase(docs=docs, embeddings=embedding)\r\n     result = gpt.query_database(query, db)\r\n \r\n-    print(db)\r\n+    print(result)\r\n \r\n if __name__ == \"__main__\":\r\n     main()\r\n"
                },
                {
                    "date": 1678416788656,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,8 +12,8 @@\n     embedding = gpt.createEmbedding()\r\n     db = gpt.getDatabase(docs=docs, embeddings=embedding)\r\n     result = gpt.query_database(query, db)\r\n \r\n-    print(result)\r\n+    print(result[0].page_content)\r\n \r\n if __name__ == \"__main__\":\r\n     main()\r\n"
                },
                {
                    "date": 1678419734948,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n \r\n \r\n def main():\r\n     api_key = os.environ['OPENAI_API_KEY']\r\n-    datasets_directory = 'data/kaggle_food_nutrition'\r\n+    datasets_directory = 'data\\amazon_reviews_test_text'\r\n     query = \"How many calories in Eggplant?\"\r\n \r\n     gpt = LLM(api_key=api_key)\r\n     docs = gpt.createDocs(datasets_directory=datasets_directory)\r\n"
                },
                {
                    "date": 1678419798641,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,10 +3,10 @@\n \r\n \r\n def main():\r\n     api_key = os.environ['OPENAI_API_KEY']\r\n-    datasets_directory = 'data\\amazon_reviews_test_text'\r\n-    query = \"How many calories in Eggplant?\"\r\n+    datasets_directory = 'data/amazon_reviews_test_text'\r\n+    query = \"Affordable taffy?\"\r\n \r\n     gpt = LLM(api_key=api_key)\r\n     docs = gpt.createDocs(datasets_directory=datasets_directory)\r\n     embedding = gpt.createEmbedding()\r\n"
                },
                {
                    "date": 1678419867409,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n \r\n def main():\r\n     api_key = os.environ['OPENAI_API_KEY']\r\n     datasets_directory = 'data/amazon_reviews_test_text'\r\n-    query = \"Affordable taffy?\"\r\n+    query = \"Cheap taffy\"\r\n \r\n     gpt = LLM(api_key=api_key)\r\n     docs = gpt.createDocs(datasets_directory=datasets_directory)\r\n     embedding = gpt.createEmbedding()\r\n"
                },
                {
                    "date": 1678419903191,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,10 +10,10 @@\n     gpt = LLM(api_key=api_key)\r\n     docs = gpt.createDocs(datasets_directory=datasets_directory)\r\n     embedding = gpt.createEmbedding()\r\n     db = gpt.getDatabase(docs=docs, embeddings=embedding)\r\n-    result = gpt.query_database(query, db)\r\n+    results = gpt.query_database(query, db)\r\n \r\n-    print(result[0].page_content)\r\n+    print(results)\r\n \r\n if __name__ == \"__main__\":\r\n     main()\r\n"
                },
                {
                    "date": 1678420649222,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,8 +12,8 @@\n     embedding = gpt.createEmbedding()\r\n     db = gpt.getDatabase(docs=docs, embeddings=embedding)\r\n     results = gpt.query_database(query, db)\r\n \r\n-    print(results)\r\n+    print(results[0].page_content)\r\n \r\n if __name__ == \"__main__\":\r\n     main()\r\n"
                },
                {
                    "date": 1678420914099,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,10 +4,12 @@\n \r\n def main():\r\n     api_key = os.environ['OPENAI_API_KEY']\r\n     datasets_directory = 'data/amazon_reviews_test_text'\r\n-    query = \"Cheap taffy\"\r\n \r\n+\r\n+    query = \"Dog food\"\r\n+\r\n     gpt = LLM(api_key=api_key)\r\n     docs = gpt.createDocs(datasets_directory=datasets_directory)\r\n     embedding = gpt.createEmbedding()\r\n     db = gpt.getDatabase(docs=docs, embeddings=embedding)\r\n"
                },
                {
                    "date": 1678421212499,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,10 +4,10 @@\n \r\n def main():\r\n     api_key = os.environ['OPENAI_API_KEY']\r\n     datasets_directory = 'data/amazon_reviews_test_text'\r\n+    db_directory = 'db/amazon_review_test'\r\n \r\n-\r\n     query = \"Dog food\"\r\n \r\n     gpt = LLM(api_key=api_key)\r\n     docs = gpt.createDocs(datasets_directory=datasets_directory)\r\n"
                },
                {
                    "date": 1678421492204,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n \r\n     gpt = LLM(api_key=api_key)\r\n     docs = gpt.createDocs(datasets_directory=datasets_directory)\r\n     embedding = gpt.createEmbedding()\r\n-    db = gpt.getDatabase(docs=docs, embeddings=embedding)\r\n+    db = gpt.getDatabase(docs=docs, embedding=embedding)\r\n     results = gpt.query_database(query, db)\r\n \r\n     print(results[0].page_content)\r\n \r\n"
                },
                {
                    "date": 1678421527472,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,6 +16,7 @@\n     results = gpt.query_database(query, db)\r\n \r\n     print(results[0].page_content)\r\n \r\n+\r\n if __name__ == \"__main__\":\r\n     main()\r\n"
                },
                {
                    "date": 1678421823563,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n \r\n     query = \"Dog food\"\r\n \r\n     gpt = LLM(api_key=api_key)\r\n-    docs = gpt.createDocs(datasets_directory=datasets_directory)\r\n+    docs = gpt.createDocs(datasets_directory=db_directory)\r\n     embedding = gpt.createEmbedding()\r\n     db = gpt.getDatabase(docs=docs, embedding=embedding)\r\n     results = gpt.query_database(query, db)\r\n \r\n"
                },
                {
                    "date": 1678421830159,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,11 +9,11 @@\n \r\n     query = \"Dog food\"\r\n \r\n     gpt = LLM(api_key=api_key)\r\n-    docs = gpt.createDocs(datasets_directory=db_directory)\r\n+    docs = gpt.createDocs(datasets_directory=datasets_directory)\r\n     embedding = gpt.createEmbedding()\r\n-    db = gpt.getDatabase(docs=docs, embedding=embedding)\r\n+    db = gpt.getDatabase(docs=docs, embedding=embedding, db_directory)\r\n     results = gpt.query_database(query, db)\r\n \r\n     print(results[0].page_content)\r\n \r\n"
                },
                {
                    "date": 1678421845956,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n \r\n     gpt = LLM(api_key=api_key)\r\n     docs = gpt.createDocs(datasets_directory=datasets_directory)\r\n     embedding = gpt.createEmbedding()\r\n-    db = gpt.getDatabase(docs=docs, embedding=embedding, db_directory)\r\n+    db = gpt.getDatabase(docs=docs, embedding=embedding, db_dir=db_directory)\r\n     results = gpt.query_database(query, db)\r\n \r\n     print(results[0].page_content)\r\n \r\n"
                },
                {
                    "date": 1678422327008,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n \r\n def main():\r\n     api_key = os.environ['OPENAI_API_KEY']\r\n     datasets_directory = 'data/amazon_reviews_test_text'\r\n-    db_directory = 'db/amazon_review_test'\r\n+    db_directory = 'db/amazon_review'\r\n \r\n     query = \"Dog food\"\r\n \r\n     gpt = LLM(api_key=api_key)\r\n"
                },
                {
                    "date": 1678422341329,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,8 +15,9 @@\n     db = gpt.getDatabase(docs=docs, embedding=embedding, db_dir=db_directory)\r\n     results = gpt.query_database(query, db)\r\n \r\n     print(results[0].page_content)\r\n+    print(results)\r\n \r\n \r\n if __name__ == \"__main__\":\r\n     main()\r\n"
                },
                {
                    "date": 1678422673335,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,10 +9,11 @@\n \r\n     query = \"Dog food\"\r\n \r\n     gpt = LLM(api_key=api_key)\r\n+    embedding = gpt.createEmbedding()\r\n+\r\n     docs = gpt.createDocs(datasets_directory=datasets_directory)\r\n-    embedding = gpt.createEmbedding()\r\n     db = gpt.getDatabase(docs=docs, embedding=embedding, db_dir=db_directory)\r\n     results = gpt.query_database(query, db)\r\n \r\n     print(results[0].page_content)\r\n"
                },
                {
                    "date": 1678422724494,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,8 +11,10 @@\n \r\n     gpt = LLM(api_key=api_key)\r\n     embedding = gpt.createEmbedding()\r\n \r\n+    if os.path.exists(db_directory):\r\n+        db = gpt.getDatabase(embedding=embedding, db_dir=db_directory)\r\n     docs = gpt.createDocs(datasets_directory=datasets_directory)\r\n     db = gpt.getDatabase(docs=docs, embedding=embedding, db_dir=db_directory)\r\n     results = gpt.query_database(query, db)\r\n \r\n"
                },
                {
                    "date": 1678422732060,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,10 +13,11 @@\n     embedding = gpt.createEmbedding()\r\n \r\n     if os.path.exists(db_directory):\r\n         db = gpt.getDatabase(embedding=embedding, db_dir=db_directory)\r\n-    docs = gpt.createDocs(datasets_directory=datasets_directory)\r\n-    db = gpt.getDatabase(docs=docs, embedding=embedding, db_dir=db_directory)\r\n+    else:\r\n+        docs = gpt.createDocs(datasets_directory=datasets_directory)\r\n+        db = gpt.getDatabase(docs=docs, embedding=embedding, db_dir=db_directory)\r\n     results = gpt.query_database(query, db)\r\n \r\n     print(results[0].page_content)\r\n     print(results)\r\n"
                },
                {
                    "date": 1678423316126,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n     api_key = os.environ['OPENAI_API_KEY']\r\n     datasets_directory = 'data/amazon_reviews_test_text'\r\n     db_directory = 'db/amazon_review'\r\n \r\n-    query = \"Dog food\"\r\n+    query = \"Cheap beans\"\r\n \r\n     gpt = LLM(api_key=api_key)\r\n     embedding = gpt.createEmbedding()\r\n \r\n@@ -16,8 +16,9 @@\n         db = gpt.getDatabase(embedding=embedding, db_dir=db_directory)\r\n     else:\r\n         docs = gpt.createDocs(datasets_directory=datasets_directory)\r\n         db = gpt.getDatabase(docs=docs, embedding=embedding, db_dir=db_directory)\r\n+        \r\n     results = gpt.query_database(query, db)\r\n \r\n     print(results[0].page_content)\r\n     print(results)\r\n"
                },
                {
                    "date": 1678423351051,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n \r\n \r\n def main():\r\n     api_key = os.environ['OPENAI_API_KEY']\r\n-    datasets_directory = 'data/amazon_reviews_test_text'\r\n+    datasets_directory = 'data/amazon_reviews_text'\r\n     db_directory = 'db/amazon_review'\r\n \r\n     query = \"Cheap beans\"\r\n \r\n"
                },
                {
                    "date": 1678423771936,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n \r\n def main():\r\n     api_key = os.environ['OPENAI_API_KEY']\r\n     datasets_directory = 'data/amazon_reviews_text'\r\n-    db_directory = 'db/amazon_review'\r\n+    db_directory = 'db/amazon_reviews'\r\n \r\n     query = \"Cheap beans\"\r\n \r\n     gpt = LLM(api_key=api_key)\r\n"
                },
                {
                    "date": 1678423784158,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n     if os.path.exists(db_directory):\r\n         db = gpt.getDatabase(embedding=embedding, db_dir=db_directory)\r\n     else:\r\n         docs = gpt.createDocs(datasets_directory=datasets_directory)\r\n-        db = gpt.getDatabase(docs=docs, embedding=embedding, db_dir=db_directory)\r\n+        db = gpt.createDatabase(docs=docs, embedding=embedding, db_dir=db_directory)\r\n         \r\n     results = gpt.query_database(query, db)\r\n \r\n     print(results[0].page_content)\r\n"
                },
                {
                    "date": 1678424262119,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,10 +12,12 @@\n     gpt = LLM(api_key=api_key)\r\n     embedding = gpt.createEmbedding()\r\n \r\n     if os.path.exists(db_directory):\r\n+        print('database exists...')\r\n         db = gpt.getDatabase(embedding=embedding, db_dir=db_directory)\r\n     else:\r\n+        print('database does not exists...')\r\n         docs = gpt.createDocs(datasets_directory=datasets_directory)\r\n         db = gpt.createDatabase(docs=docs, embedding=embedding, db_dir=db_directory)\r\n         \r\n     results = gpt.query_database(query, db)\r\n"
                },
                {
                    "date": 1678424675181,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,10 +3,10 @@\n \r\n \r\n def main():\r\n     api_key = os.environ['OPENAI_API_KEY']\r\n-    datasets_directory = 'data/amazon_reviews_text'\r\n-    db_directory = 'db/amazon_reviews'\r\n+    datasets_directory = 'data/amazon_reviews_text_test'\r\n+    db_directory = 'db/amazon_reviews_test'\r\n \r\n     query = \"Cheap beans\"\r\n \r\n     gpt = LLM(api_key=api_key)\r\n"
                },
                {
                    "date": 1678424700839,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n \r\n \r\n def main():\r\n     api_key = os.environ['OPENAI_API_KEY']\r\n-    datasets_directory = 'data/amazon_reviews_text_test'\r\n+    datasets_directory = 'data/amazon_reviews_test_text'\r\n     db_directory = 'db/amazon_reviews_test'\r\n \r\n     query = \"Cheap beans\"\r\n \r\n"
                },
                {
                    "date": 1678424891858,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,7 +24,28 @@\n \r\n     print(results[0].page_content)\r\n     print(results)\r\n \r\n+def appendTexts():\r\n+    api_key = os.environ['OPENAI_API_KEY']\r\n+    datasets_directory = 'data/amazon_reviews_test_text'\r\n+    db_directory = 'db/amazon_reviews_test'\r\n \r\n+    query = \"Cheap beans\"\r\n+\r\n+    gpt = LLM(api_key=api_key)\r\n+    embedding = gpt.createEmbedding()\r\n+\r\n+    if os.path.exists(db_directory):\r\n+        print('database exists...')\r\n+        db = gpt.getDatabase(embedding=embedding, db_dir=db_directory)\r\n+    else:\r\n+        print('database does not exists...')\r\n+        return\r\n+        \r\n+    results = gpt.query_database(query, db)\r\n+\r\n+    print(results[0].page_content)\r\n+    print(results)\r\n+\r\n if __name__ == \"__main__\":\r\n     main()\r\n"
                },
                {
                    "date": 1678424930651,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,11 @@\n     embedding = gpt.createEmbedding()\r\n \r\n     if os.path.exists(db_directory):\r\n         print('database exists...')\r\n+        docs = gpt.createDocs(datasets_directory=datasets_directory)\r\n         db = gpt.getDatabase(embedding=embedding, db_dir=db_directory)\r\n+        db.add_documents()\r\n     else:\r\n         print('database does not exists...')\r\n         return\r\n         \r\n"
                },
                {
                    "date": 1678424936989,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n     if os.path.exists(db_directory):\r\n         print('database exists...')\r\n         docs = gpt.createDocs(datasets_directory=datasets_directory)\r\n         db = gpt.getDatabase(embedding=embedding, db_dir=db_directory)\r\n-        db.add_documents()\r\n+        db.add_documents(documents=docs)\r\n     else:\r\n         print('database does not exists...')\r\n         return\r\n         \r\n"
                },
                {
                    "date": 1678424956797,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,5 +49,6 @@\n     print(results[0].page_content)\r\n     print(results)\r\n \r\n if __name__ == \"__main__\":\r\n-    main()\r\n+    # main()\r\n+    appendTexts()\r\n"
                },
                {
                    "date": 1678424968754,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n \r\n     print(results[0].page_content)\r\n     print(results)\r\n \r\n-def appendTexts():\r\n+def add_documents():\r\n     api_key = os.environ['OPENAI_API_KEY']\r\n     datasets_directory = 'data/amazon_reviews_test_text'\r\n     db_directory = 'db/amazon_reviews_test'\r\n \r\n@@ -50,5 +50,5 @@\n     print(results)\r\n \r\n if __name__ == \"__main__\":\r\n     # main()\r\n-    appendTexts()\r\n+    add_documents()\r\n"
                },
                {
                    "date": 1678424994864,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,6 +49,6 @@\n     print(results[0].page_content)\r\n     print(results)\r\n \r\n if __name__ == \"__main__\":\r\n-    # main()\r\n-    add_documents()\r\n+    main()\r\n+    # add_documents()\r\n"
                },
                {
                    "date": 1678425416824,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n     if os.path.exists(db_directory):\r\n         print('database exists...')\r\n         docs = gpt.createDocs(datasets_directory=datasets_directory)\r\n         db = gpt.getDatabase(embedding=embedding, db_dir=db_directory)\r\n-        db.add_documents(documents=docs)\r\n+        db.add_texts(texts=docs)\r\n     else:\r\n         print('database does not exists...')\r\n         return\r\n         \r\n@@ -49,6 +49,6 @@\n     print(results[0].page_content)\r\n     print(results)\r\n \r\n if __name__ == \"__main__\":\r\n-    main()\r\n-    # add_documents()\r\n+    # main()\r\n+    add_documents()\r\n"
                },
                {
                    "date": 1678427692626,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,10 +3,10 @@\n \r\n \r\n def main():\r\n     api_key = os.environ['OPENAI_API_KEY']\r\n-    datasets_directory = 'data/amazon_reviews_test_text'\r\n-    db_directory = 'db/amazon_reviews_test'\r\n+    datasets_directory = 'data/amazon_reviews_text'\r\n+    db_directory = 'db/amazon_reviews'\r\n \r\n     query = \"Cheap beans\"\r\n \r\n     gpt = LLM(api_key=api_key)\r\n"
                },
                {
                    "date": 1678427725442,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,6 +49,6 @@\n     print(results[0].page_content)\r\n     print(results)\r\n \r\n if __name__ == \"__main__\":\r\n-    # main()\r\n-    add_documents()\r\n+    main()\r\n+    # add_documents()\r\n"
                },
                {
                    "date": 1678428827664,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,54 @@\n+import os\r\n+from llm import LLM\r\n+\r\n+\r\n+def main():\r\n+    api_key = os.environ['OPENAI_API_KEY']\r\n+    datasets_directory = 'data/amazon_reviews_text'\r\n+    db_directory = 'db/amazon_reviews'\r\n+\r\n+    query = \"Cheap beans\"\r\n+\r\n+    gpt = LLM(api_key=api_key)\r\n+    embedding = gpt.createEmbedding()\r\n+\r\n+    if os.path.exists(db_directory):\r\n+        print('database exists...')\r\n+        db = gpt.getDatabase(embedding=embedding, db_dir=db_directory)\r\n+    else:\r\n+        print('database does not exists...')\r\n+        docs = gpt.createDocs(datasets_directory=datasets_directory)\r\n+        db = gpt.createDatabase(docs=docs, embedding=embedding, db_dir=db_directory)\r\n+        \r\n+    results = gpt.query_database(query, db)\r\n+\r\n+    print(results[0].page_content)\r\n+    print(results)\r\n+\r\n+def add_documents():\r\n+    api_key = os.environ['OPENAI_API_KEY']\r\n+    datasets_directory = 'data/amazon_reviews_test_text'\r\n+    db_directory = 'db/amazon_reviews_test'\r\n+\r\n+    query = \"HP laptop with good specs for programming\"\r\n+\r\n+    gpt = LLM(api_key=api_key)\r\n+    embedding = gpt.createEmbedding()\r\n+\r\n+    if os.path.exists(db_directory):\r\n+        print('database exists...')\r\n+        docs = gpt.createDocs(datasets_directory=datasets_directory)\r\n+        db = gpt.getDatabase(embedding=embedding, db_dir=db_directory)\r\n+        db.add_texts(texts=docs)\r\n+    else:\r\n+        print('database does not exists...')\r\n+        return\r\n+        \r\n+    results = gpt.query_database(query, db)\r\n+\r\n+    print(results[0].page_content)\r\n+    print(results)\r\n+\r\n+if __name__ == \"__main__\":\r\n+    main()\r\n+    # add_documents()\r\n"
                },
                {
                    "date": 1678431186340,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n     api_key = os.environ['OPENAI_API_KEY']\r\n     datasets_directory = 'data/amazon_reviews_text'\r\n     db_directory = 'db/amazon_reviews'\r\n \r\n-    query = \"Cheap beans\"\r\n+    query = \"HP laptop with good specs for programming\"\r\n \r\n     gpt = LLM(api_key=api_key)\r\n     embedding = gpt.createEmbedding()\r\n \r\n@@ -51,58 +51,4 @@\n \r\n if __name__ == \"__main__\":\r\n     main()\r\n     # add_documents()\r\n-import os\r\n-from llm import LLM\r\n-\r\n-\r\n-def main():\r\n-    api_key = os.environ['OPENAI_API_KEY']\r\n-    datasets_directory = 'data/amazon_reviews_text'\r\n-    db_directory = 'db/amazon_reviews'\r\n-\r\n-    query = \"Cheap beans\"\r\n-\r\n-    gpt = LLM(api_key=api_key)\r\n-    embedding = gpt.createEmbedding()\r\n-\r\n-    if os.path.exists(db_directory):\r\n-        print('database exists...')\r\n-        db = gpt.getDatabase(embedding=embedding, db_dir=db_directory)\r\n-    else:\r\n-        print('database does not exists...')\r\n-        docs = gpt.createDocs(datasets_directory=datasets_directory)\r\n-        db = gpt.createDatabase(docs=docs, embedding=embedding, db_dir=db_directory)\r\n-        \r\n-    results = gpt.query_database(query, db)\r\n-\r\n-    print(results[0].page_content)\r\n-    print(results)\r\n-\r\n-def add_documents():\r\n-    api_key = os.environ['OPENAI_API_KEY']\r\n-    datasets_directory = 'data/amazon_reviews_test_text'\r\n-    db_directory = 'db/amazon_reviews_test'\r\n-\r\n-    query = \"Cheap beans\"\r\n-\r\n-    gpt = LLM(api_key=api_key)\r\n-    embedding = gpt.createEmbedding()\r\n-\r\n-    if os.path.exists(db_directory):\r\n-        print('database exists...')\r\n-        docs = gpt.createDocs(datasets_directory=datasets_directory)\r\n-        db = gpt.getDatabase(embedding=embedding, db_dir=db_directory)\r\n-        db.add_texts(texts=docs)\r\n-    else:\r\n-        print('database does not exists...')\r\n-        return\r\n-        \r\n-    results = gpt.query_database(query, db)\r\n-\r\n-    print(results[0].page_content)\r\n-    print(results)\r\n-\r\n-if __name__ == \"__main__\":\r\n-    main()\r\n-    # add_documents()\r\n"
                },
                {
                    "date": 1678431274986,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n     api_key = os.environ['OPENAI_API_KEY']\r\n     datasets_directory = 'data/amazon_reviews_text'\r\n     db_directory = 'db/amazon_reviews'\r\n \r\n-    query = \"HP laptop with good specs for programming\"\r\n+    query = \"Expensive beans\"\r\n \r\n     gpt = LLM(api_key=api_key)\r\n     embedding = gpt.createEmbedding()\r\n \r\n"
                },
                {
                    "date": 1678435375244,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n     api_key = os.environ['OPENAI_API_KEY']\r\n     datasets_directory = 'data/amazon_reviews_text'\r\n     db_directory = 'db/amazon_reviews'\r\n \r\n-    query = \"Expensive beans\"\r\n+    query = \"Earthy coffee beans\"\r\n \r\n     gpt = LLM(api_key=api_key)\r\n     embedding = gpt.createEmbedding()\r\n \r\n"
                },
                {
                    "date": 1678435400627,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,8 +22,9 @@\n         \r\n     results = gpt.query_database(query, db)\r\n \r\n     print(results[0].page_content)\r\n+    print()\r\n     print(results)\r\n \r\n def add_documents():\r\n     api_key = os.environ['OPENAI_API_KEY']\r\n"
                },
                {
                    "date": 1678435434235,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,11 +21,10 @@\n         db = gpt.createDatabase(docs=docs, embedding=embedding, db_dir=db_directory)\r\n         \r\n     results = gpt.query_database(query, db)\r\n \r\n-    print(results[0].page_content)\r\n-    print()\r\n-    print(results)\r\n+    for result in results:\r\n+        print(result)\r\n \r\n def add_documents():\r\n     api_key = os.environ['OPENAI_API_KEY']\r\n     datasets_directory = 'data/amazon_reviews_test_text'\r\n"
                },
                {
                    "date": 1678435440908,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,8 +23,9 @@\n     results = gpt.query_database(query, db)\r\n \r\n     for result in results:\r\n         print(result)\r\n+        print()\r\n \r\n def add_documents():\r\n     api_key = os.environ['OPENAI_API_KEY']\r\n     datasets_directory = 'data/amazon_reviews_test_text'\r\n"
                },
                {
                    "date": 1678467015109,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n     api_key = os.environ['OPENAI_API_KEY']\r\n     datasets_directory = 'data/amazon_reviews_text'\r\n     db_directory = 'db/amazon_reviews'\r\n \r\n-    query = \"Earthy coffee beans\"\r\n+    query = \"Beast cheap pizza\"\r\n \r\n     gpt = LLM(api_key=api_key)\r\n     embedding = gpt.createEmbedding()\r\n \r\n"
                },
                {
                    "date": 1678467034281,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n     api_key = os.environ['OPENAI_API_KEY']\r\n     datasets_directory = 'data/amazon_reviews_text'\r\n     db_directory = 'db/amazon_reviews'\r\n \r\n-    query = \"Beast cheap pizza\"\r\n+    query = \"Best cheap pizza\"\r\n \r\n     gpt = LLM(api_key=api_key)\r\n     embedding = gpt.createEmbedding()\r\n \r\n@@ -22,9 +22,9 @@\n         \r\n     results = gpt.query_database(query, db)\r\n \r\n     for result in results:\r\n-        print(result)\r\n+        print(result.page_content)\r\n         print()\r\n \r\n def add_documents():\r\n     api_key = os.environ['OPENAI_API_KEY']\r\n"
                },
                {
                    "date": 1678467093658,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n     api_key = os.environ['OPENAI_API_KEY']\r\n     datasets_directory = 'data/amazon_reviews_text'\r\n     db_directory = 'db/amazon_reviews'\r\n \r\n-    query = \"Best cheap pizza\"\r\n+    query = \"pizza not whole wheat\"\r\n \r\n     gpt = LLM(api_key=api_key)\r\n     embedding = gpt.createEmbedding()\r\n \r\n"
                },
                {
                    "date": 1678484054951,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import os\r\n-from llm import LLM\r\n+from llm import Recommender\r\n \r\n \r\n def main():\r\n     api_key = os.environ['OPENAI_API_KEY']\r\n@@ -8,9 +8,9 @@\n     db_directory = 'db/amazon_reviews'\r\n \r\n     query = \"pizza not whole wheat\"\r\n \r\n-    gpt = LLM(api_key=api_key)\r\n+    gpt = Recommender(api_key=api_key)\r\n     embedding = gpt.createEmbedding()\r\n \r\n     if os.path.exists(db_directory):\r\n         print('database exists...')\r\n@@ -32,9 +32,9 @@\n     db_directory = 'db/amazon_reviews_test'\r\n \r\n     query = \"HP laptop with good specs for programming\"\r\n \r\n-    gpt = LLM(api_key=api_key)\r\n+    gpt = Recommender(api_key=api_key)\r\n     embedding = gpt.createEmbedding()\r\n \r\n     if os.path.exists(db_directory):\r\n         print('database exists...')\r\n"
                },
                {
                    "date": 1678484077348,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import os\r\n-from llm import Recommender\r\n+from recommender import Recommender\r\n \r\n \r\n def main():\r\n     api_key = os.environ['OPENAI_API_KEY']\r\n"
                }
            ],
            "date": 1678412092969,
            "name": "Commit-0",
            "content": "import sys\r\nfrom gpt import Gpt\r\n\r\n\r\ndef main(user_input):\r\n    api_key = os.environ['OPENAI_API_KEY']\r\n    \r\n    prompt = 'Food:' + user_input + \\\r\n        '. Return the serving calories and nutrition as one JSON in the form of {\"items\": [{\"item_name\": string,\"calories\": number,\"protein\": number,\"carbohydrates\": number, \"fat\": number, \"servings\": number, \"unit\": string}, ...]}'\r\n\r\n    ai = Gpt(api_key=api_key)\r\n\r\n    nutrition = ai.generate_response(prompt=prompt)\r\n\r\n    return nutrition.strip()\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    user_input = sys.argv[1]\r\n    # user_input = \"3 crepes, 6 tbsp of hershey's syrup:\"\r\n    response = main(user_input)\r\n    print(response)\r\n    # sys.stdout.write(response)\r\n"
        }
    ]
}